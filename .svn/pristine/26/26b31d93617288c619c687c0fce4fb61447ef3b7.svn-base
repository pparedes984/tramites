/*
 * File: app/view/direccionar/DirecGeneralViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tramites.view.direccionar.DirecGeneralViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.direccionar.direcgeneral',

    onButtonClick: function(button, e, eOpts) {
        var tramiteNum =  Ext.getCmp('txtTramDir').getValue();
        var parametroNum = Ext.getCmp('cbParamDir').getValue();
        var busc = 1;
        var strTramiteReg = Ext.getStore('Registro');
        strTramiteReg.proxy.extraParams = {
            busqueda: busc,
            tramite: tramiteNum,
            parametro: parametroNum
        };
        strTramiteReg.load();
    },

    onButtonClick1: function(button, e, eOpts) {
        this.onGrdTramite2Render();
    },

    onChRecibidoChange: function(field, newValue, oldValue, eOpts) {
        /*if(Ext.getCmp('chRecibido').getValue()){
        if(Ext.getCmp('txtFechaR').getValue()===''){
        Ext.Msg.show({
        title: 'Aviso',
        msg: 'Va a recepcionar el trámite y después ya no puede modificarlo. ¿Está seguro?',
        icon: Ext.Msg.QUESTION,
        buttonText: {
        yes: 'Aceptar',
        no: 'Cancelar'
        },
        buttons: Ext.Msg.YESNO,
        fn: function (btn) {
        if (btn == 'yes') {
        //Nuevafecha
        var fecha = Ext.Date.format(new Date(), "Y-m-d");
        Ext.getCmp('txtFechaR').setValue(fecha);
        //Update fecha recibido
        var forma = Ext.getCmp('formDireccionar').getForm(),
            store = Ext.StoreManager.lookup('Registro');
        var rec    = forma.getRecord();
        var values = forma.getValues();
        rec.set(values);
        store.add(rec);
        store.sync(
        {
            params: {
                idParametro: rec.data.TRA_PRM_ID
            },
            success: function(batch, options)
            {
                store.commitChanges();
                forma.loadRecord(rec);
                store.load();
                Ext.getCmp('pnlDestinosDireccionar').getStore().load();
            },
            failure: function(batch, options)
            {
                Ext.Msg.alert('Error', 'Hubo un error');
            }
        }
        );
        Ext.getCmp('chbRecibido').setDisabled(true);
    }
    else{
        Ext.getCmp('chbRecibido').setValue(false);
    }
}
});

}
else{ //Cargar grdDrecTramite
Ext.getCmp('chbRecibido').setDisabled(true);
this.onBtnDirecRefreshClick();
}
Ext.getCmp('pnlDestinosDireccionar').setVisible(true);
}
else{
if(Ext.getCmp('dateRecibido').getValue()===''){
Ext.getCmp('pnlDestinosDireccionar').setVisible(false);
Ext.getCmp('chbRecibido').setDisabled(false);
}
}*/
    },

    onCheckRecibidoCheckChange: function(checkcolumn, rowIndex, checked, record, e, eOpts) {
        if(Ext.getCmp('chRecibido').getValue()){
            if(Ext.getCmp('txtFechaR').getValue()===''){
                Ext.Msg.show({
                    title: 'Aviso',
                    msg: 'Va a recepcionar el trámite y después ya no puede modificarlo. ¿Está seguro?',
                    icon: Ext.Msg.QUESTION,
                    buttonText: {
                        yes: 'Aceptar',
                        no: 'Cancelar'
                    },
                    buttons: Ext.Msg.YESNO,
                    fn: function (btn) {
                        if (btn == 'yes') {
                            //Nuevafecha
                            var fecha = Ext.Date.format(new Date(), "Y-m-d");
                            Ext.getCmp('txtFechaR').setValue(fecha);
                            //Update fecha recibido
                            /*var forma = Ext.getCmp('formDireccionar').getForm(),
                            store = Ext.StoreManager.lookup('Registro');
                            var rec    = forma.getRecord();
                            var values = forma.getValues();
                            rec.set(values);
                            store.add(rec);
                            store.sync(
                            {
                            params: {
                            idParametro: rec.data.TRA_PRM_ID
                            },
                            success: function(batch, options)
                            {
                            store.commitChanges();
                            forma.loadRecord(rec);
                            store.load();
                            Ext.getCmp('pnlDestinosDireccionar').getStore().load();
                            },
                            failure: function(batch, options)
                            {
                            Ext.Msg.alert('Error', 'Hubo un error');
                            }
                            }
                            );*/
                            var store = Ext.getCmp('grdTramite2').getStore();
                            var rec = Ext.create('model.registromodel');
                            rec.set(record.data);
                            store.add(rec);
                            store.sync(
                            {
                                success: function(batch, success)
                                {
                                    store.commitChanges();
                                    store.load();
                                    //me.onCancel();
                                    Ext.getCmp('grdTramite2').getStore().load();
                                },

                                failure: function(batch, success)
                                {
                                    Ext.Msg.alert('Error', 'Hubor un error');
                                }
                            });

                            Ext.getCmp('chRecibido').setDisabled(true);
                        }
                        else{
                            Ext.getCmp('chRecibido').setValue(false);
                        }
                    }
                });

            }
            else{ //Cargar grdDrecTramite
                Ext.getCmp('chRecibido').setDisabled(true);
                //this.onBtnDirecRefreshClick();
            }
            Ext.getCmp('pnlDestinosDireccionar').setVisible(true);
        }
        else{
            if(Ext.getCmp('txtFechaR').getValue()===''){
                Ext.getCmp('pnlDestinosDireccionar').setVisible(false);
                Ext.getCmp('chbRecibido').setDisabled(false);
            }
        }
    },

    onFechaRecibidoChange: function(field, newValue, oldValue, eOpts) {
        if(Ext.getCmp('dateRecibido').getValue()==='1900-01-01 00:00:00.000' || Ext.getCmp('dateRecibido').getValue()==='1900-01-01' ){
            Ext.getCmp('dateRecibido').setValue(null);
        }
    },

    onGrdTramite2CellDblClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
        if (record)
        {
            var winTramiteD = Ext.create('Tramites.view.direccionar.winTramiteDetalle');
            winTramiteD.curRec = record;
            winTramiteD.store = Ext.getStore('Estado');
            Ext.getStore('Estado').load();
            winTramiteD.show();
        }
        else
        {
            Ext.Msg.alert('Error', 'Seleccione un registro para editar');
        }
    },

    onGrdTramite2Render: function(component, eOpts) {
        var strTramiteDet = Ext.getStore('Registro');
        strTramiteDet.proxy.extraParams = {
            busqueda: 2
        };
        strTramiteDet.load();
    },

    onChbRecibidoChange: function(field, newValue, oldValue, eOpts) {
        if(Ext.getCmp('chbRecibido').getValue()){
            if(Ext.getCmp('dateRecibido').getValue()===''){
                Ext.Msg.show({
                    title: 'Aviso',
                    msg: 'Va a recepcionar el trámite y después ya no puede modificarlo. ¿Está seguro?',
                    icon: Ext.Msg.QUESTION,
                    buttonText: {
                        yes: 'Aceptar',
                        no: 'Cancelar'
                    },
                    buttons: Ext.Msg.YESNO,
                    fn: function (btn) {
                        if (btn == 'yes') {
                            //Nuevafecha
                            var fecha = Ext.Date.format(new Date(), "Y-m-d");
                            Ext.getCmp('dateRecibido').setValue(fecha);
                            //Update fecha recibido
                            var forma = Ext.getCmp('formDireccionar').getForm(),
                                store = Ext.StoreManager.lookup('Registro');
                            var rec    = forma.getRecord();
                            var values = forma.getValues();
                            rec.set(values);
                            store.add(rec);
                            store.sync(
                            {
                                params: {
                                    idParametro: rec.data.TRA_PRM_ID
                                },
                                success: function(batch, options)
                                {
                                    store.commitChanges();
                                    forma.loadRecord(rec);
                                    store.load();
                                    Ext.getCmp('pnlDestinosDireccionar').getStore().load();
                                },
                                failure: function(batch, options)
                                {
                                    Ext.Msg.alert('Error', 'Hubo un error');
                                }
                            }
                            );
                            Ext.getCmp('chbRecibido').setDisabled(true);
                        }
                        else{
                            Ext.getCmp('chbRecibido').setValue(false);
                        }
                    }
                });

            }
            else{ //Cargar grdDrecTramite
                Ext.getCmp('chbRecibido').setDisabled(true);
                this.onBtnDirecRefreshClick();
            }
            Ext.getCmp('pnlDestinosDireccionar').setVisible(true);
        }
        else{
            if(Ext.getCmp('dateRecibido').getValue()===''){
                Ext.getCmp('pnlDestinosDireccionar').setVisible(false);
                Ext.getCmp('chbRecibido').setDisabled(false);
            }
        }
    },

    onDateRecibidoChange: function(field, newValue, oldValue, eOpts) {
        //Vaciar si la fecha entrega = 1900-01-01
        if(Ext.getCmp('dateRecibido').getValue()==='1900-01-01 00:00:00.000' || Ext.getCmp('dateRecibido').getValue()==='1900-01-01' ){
            Ext.getCmp('dateRecibido').setValue(null);
        }
    },

    onButtonClick2: function(button, e, eOpts) {
        /*var store = Ext.getCmp('grdDirecTramite').getStore();
        var rec = Ext.create('model.estadomodel');
        rec.data.EST_FECHAINICIO = new Date();

        var forma = Ext.getCmp('formDireccionar').getForm();
        var reco    = forma.getRecord();

        var tramiteNum = reco.data.TRA_CODIGO;
        var parametroNum = reco.data.TRA_PRM_ID;
        var fechainicio = reco.data.TRA_FECHARECIBIDO;
        //var strEstado = Ext.getStore('Estado');
        store.proxy.extraParams = {
            tramite: tramiteNum,
            parametro: parametroNum,
            fecha: fechainicio
        };


        store.add(rec);
        store.commitChanges();
        store.load();*/
        var grid = Ext.getCmp('grdDirecTramite');
        var store = grid.getStore();
        var forma = Ext.getCmp('formDireccionar').getForm();
        var reco    = forma.getRecord();
        var tramiteNum = reco.data.TRA_CODIGO;
        var parametroNum = reco.data.TRA_PRM_ID;
        var fechainicio = reco.data.TRA_FECHARECIBIDO;
        store.insert(0,
        {
            EST_CODIGO: 0,
            TRA_PRM_ID:parametroNum,
            EST_FECHARECIBIDO:new Date(),
            EST_FECHAINICIO: fechainicio,
            TRA_CODIGO:tramiteNum,
            UND_CODIGO:0
        });
    },

    onBtnDirecRefreshClick: function(button, e, eOpts) {
        var grid = Ext.getCmp('grdDirecTramite');
        var store = grid.getStore();
        var forma = Ext.getCmp('formDireccionar').getForm();
        var reco    = forma.getRecord();
        var strEstado = Ext.getStore('Estado');
        var tramiteNum = reco.data.TRA_CODIGO;
        var parametroNum = reco.data.TRA_PRM_ID;
        strEstado.load();
        strEstado.proxy.extraParams = {
            tramite: tramiteNum,
            parametro: parametroNum
        };
        Ext.getCmp('grdDirecTramite').getStore().load();
    },

    onCheckcolumnCheckChange: function(checkcolumn, rowIndex, checked, record, e, eOpts) {

        if (Ext.getCmp('chbWinEstados'))
        {
            var winDestino = Ext.create('Tramites.view.direccionar.winDestino');
            winDestino.curRec = record;
            winDestino.store = Ext.getStore('Estado');
            Ext.getStore('Estado').load();
            winDestino.show();
        }
        else
        {
            Ext.Msg.alert('Error', 'Seleccione un registro para editar');
        }
    },

    onGrdDirecTramiteRender: function(component, eOpts) {
        var strDestinos = Ext.getStore('Unidad');
        var parametro = Ext.getCmp('cbParametroForm').getValue();
        strDestinos.proxy.extraParams = {
            destino: 1,
            idparametro: parametro
        };
        strDestinos.load();
    }

});
