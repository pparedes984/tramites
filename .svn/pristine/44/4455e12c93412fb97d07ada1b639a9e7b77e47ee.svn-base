/*
 * File: app/view/panel/pnlConsultar.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tramites.view.panel.pnlConsultar', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.panel.pnlconsultar',

    requires: [
        'Tramites.view.panel.pnlNuevoViewModel1',
        'Tramites.view.panel.pnlNuevoViewController1',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Number',
        'Ext.form.field.ComboBox',
        'Ext.grid.column.Check',
        'Ext.grid.plugin.RowEditing'
    ],

    controller: 'panel.pnlconsultar',
    viewModel: {
        type: 'panel.pnlconsultar'
    },
    layout: 'fit',
    title: 'Consultar trámite',

    items: [
        {
            xtype: 'panel',
            scrollable: true,
            items: [
                {
                    xtype: 'panel',
                    title: 'My Panel'
                },
                {
                    xtype: 'gridpanel',
                    id: 'grdConsulta1',
                    title: 'Trámites',
                    forceFit: true,
                    store: 'Consulta1',
                    columns: [
                        {
                            xtype: 'numbercolumn',
                            width: 119,
                            dataIndex: 'TRA_CODIGO',
                            text: 'Código de trámite',
                            format: '0'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'TRA_FECHA',
                            text: 'Fecha trámite'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if(view)
                                {
                                    var descripcion = record.data.TRA_PRM_ID;
                                    var combo = metaData.column.getEditor();
                                    var comboStore = combo.getStore();
                                    var indice = comboStore.findExact(combo.valueField, value);

                                    if (indice >= 0)
                                    return comboStore.getAt(indice).get(combo.displayField);
                                    else
                                    return descripcion;
                                }
                                else
                                return null;
                            },
                            dataIndex: 'TRA_PRM_ID',
                            text: 'Parámetro',
                            editor: {
                                xtype: 'combobox',
                                displayField: 'PRM_NOMBRE',
                                store: 'Parametro',
                                valueField: 'PRM_ID'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if(view)
                                {
                                    var descripcion = record.data.ASU_CODIGO;
                                    var combo = metaData.column.getEditor();
                                    var comboStore = combo.getStore();
                                    var indice = comboStore.findExact(combo.valueField, value);

                                    if (indice >= 0)
                                    return comboStore.getAt(indice).get(combo.displayField);
                                    else
                                    return descripcion;
                                }
                                else
                                return null;
                            },
                            dataIndex: 'ASU_CODIGO',
                            text: 'Asunto',
                            editor: {
                                xtype: 'combobox',
                                displayField: 'ASU_DESCRIPCION',
                                store: 'Asunto',
                                valueField: 'ASU_CODIGO'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if(view)
                                {
                                    var descripcion = record.data.UND_CODIGO;
                                    var combo = metaData.column.getEditor();
                                    var comboStore = combo.getStore();
                                    var indice = comboStore.findExact(combo.valueField, value);

                                    if (indice >= 0)
                                    return comboStore.getAt(indice).get(combo.displayField);
                                    else
                                    return descripcion;
                                }
                                else
                                return null;
                            },
                            dataIndex: 'UND_CODIGO',
                            text: 'Unidad Solicitante',
                            editor: {
                                xtype: 'combobox',
                                displayField: 'UND_NOMBRE',
                                store: 'Unidad',
                                valueField: 'UND_CODIGO'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'TRA_FECHARECIBIDO',
                            text: 'Fecha Recibido (DGF)'
                        },
                        {
                            xtype: 'checkcolumn',
                            dataIndex: 'TRA_RECIBIDO',
                            text: 'Recibido (DGF)'
                        }
                    ],
                    listeners: {
                        render: 'onGrdConsulta1Render'
                    },
                    plugins: [
                        {
                            ptype: 'rowediting'
                        }
                    ]
                }
            ]
        }
    ]

});