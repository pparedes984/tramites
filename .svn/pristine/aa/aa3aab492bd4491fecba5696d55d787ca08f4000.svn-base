/*
 * File: app/view/direccionar/winDestinoViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tramites.view.direccionar.winDestinoViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.direccionar.windestino',

    onSave: function(button, e, eOpts) {
        /*var form = this.getReferences().form,
        values = form.getForm().getValues(),
        store = Ext.StoreManager.lookup('Estado');

        // Valid
        if (form.isValid()) {

            // TODO: Assign the record's ID from data source
            // Normally, this value would be auto-generated,
            // or returned from the server
            values.id = store.count() + 1;

            // Save record
            store.add(values);

            // Commit changes
            store.commitChanges();

            // Complete
            form.close();

        }*/
        me = this;
        var forma = Ext.getCmp('frmEstado').getForm(),
            store = Ext.StoreManager.lookup('Estado');

        // Valid
        if (forma.isValid()) {
            var rec    = forma.getRecord();
            var values = forma.getValues();
            rec.set(values);
            store.add(rec);
            store.sync(
            {
                params:{
                    recibido: 1
                },

                success: function(batch, options)
                {
                    store.commitChanges();
                    forma.loadRecord(rec);
                    store.load();
                    Ext.getCmp('grdDirecTramite').getStore().load();
                    Ext.Msg.alert('Se han guardado los datos exitosamente');
                    me.onCancel();

                },
                failure: function(batch, options)
                {
                    Ext.Msg.alert('Error', 'Hubo un error');
                }
            }

            );

        }
        else
        {
            Ext.Msg.alert('Ingrese los datos correctamente');
        }
    },

    onCancel: function(button, e, eOpts) {
        Ext.getCmp('winDestino').close();
    },

    onWindowAfterRender: function(component, eOpts) {
        var forma = Ext.getCmp('frmEstado').getForm();
        if(component.curRec){


            if(component.curRec.data.EST_NOMBRE== ''){
                component.curRec.data.EST_NOMBRE = 'En proceso';
            }
            forma.loadRecord(component.curRec);
        }
        else
        {
            var rec = Ext.create('model.estadomodel');
            forma.reset();
            forma.loadRecord(rec);
        }
    }

});
