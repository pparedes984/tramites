/*
 * File: app/view/panel/pnlNuevoViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tramites.view.panel.pnlNuevoViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.panel.pnlnuevo',

    onButtonNuevoClick: function(button, e, eOpts) {
        var winNuevo = Ext.create('Tramites.view.winNuevoTramite');
        winNuevo.show();//Ventana para ingresar el nuevo tramite
    },

    onButtonAnularClick: function(button, e, eOpts) {
        var grid = Ext.getCmp('grdTramite');
        var arrayKeys = grid.getSelectionModel().selected.items;
        var indice = grid.getSelectionModel().selectionStartIdx;
        console.log(arrayKeys);
        if(arrayKeys.length === 0)
        Ext.Msg.alert('Error', 'Debe escoger un registro');
        else
        {
            Ext.Msg.show({
                title: 'Atención',
                msg: 'Está seguro de borrar esta fila y los registros asociados?',
                icon: Ext.Msg.QUESTION,
                buttonText: {
                    yes: 'Si',
                    no: 'No'
                },
                buttons: Ext.Msg.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        for(i = 0; i < arrayKeys.length; i++){
                            Ext.Ajax.request
                            (
                            {
                                method: 'post',
                                url: '../servidor/tramites/registro/delete',
                                params: {
                                    idTramite: arrayKeys[i].data.TRA_CODIGO,
                                    idParametro: arrayKeys[i].data.TRA_PRM_ID
                                },
                                success: function (response, options) {
                                    var responseData = Ext.JSON.decode(response.responseText);
                                    if (!responseData.success) {
                                        var vcMsg = responseData.error;
                                        Ext.Msg.show//Mensaje de Error
                                        (
                                        {
                                            title: 'Error',
                                            msg: vcMsg,
                                            icon: Ext.Msg.ERROR,
                                            buttons: Ext.Msg.OK
                                        }
                                        );

                                    }
                                    else {
                                        grid.getStore().removeAt(indice);

                                        var strRegistro = Ext.getStore('Registro');
                                        strRegistro.load();
                                        Ext.Msg.alert('Correcto', 'Tramite(s) anulado(s)');
                                    }
                                }
                            }
                            );
                        }
                    }
                }
            });
        }
    },

    onButtonClickImprimir: function(button, e, eOpts) {
        //Imprimir
        var me = this;
        var grid = me.getView().down('#grdTramite');
        var arrayKeys = grid.getSelectionModel().selected.items;

        if(arrayKeys.length === 0)
        Ext.Msg.alert('Error', 'Debe escoger un registro');
        /*else if(arrayKeys.length >1 )
        Ext.Msg.alert('Error', 'Solo debe escoger un registro');*/
        else
        {
            console.log(arrayKeys);
            //for(i = 0; i < arrayKeys.length; i++){
            Ext.Ajax.request
            (
            {
                method: 'post',
                url: '../servidor/tramites/registro/getReporte',
                params: {
                    tracodigo: arrayKeys[0].data.TRA_CODIGO,
                    parametro: arrayKeys[0].data.TRA_PRM_ID,
                },
                success: function(response){
                    var _url = response.responseText;
                    new Ext.Window({
                        title: 'Trámite',
                        id: 'pdfWindow',
                        layout: 'fit',
                        width: 800,
                        height: 700,
                        modal: true,
                        closeAction: 'destroy',
                        items: [{
                            xtype: 'component',
                            autoEl: {
                                tag: 'iframe',
                                style: 'height:100%; width:100%; border:none',
                                src: _url
                            }
                        }]
                    }).show();
                }
            }
            );
            //}
        }
    },

    onButtonClickRefresh: function(button, e, eOpts) {
        var strTramiteReg = Ext.getStore('Registro');
        strTramiteReg.removeAll();
        Ext.getCmp('grdTramite').store.removeAll();
        strTramiteReg.proxy.extraParams = {
            busqueda: 0//Parametro para elegir el tipo de busqueda
        };
        strTramiteReg.load();
        Ext.getCmp('cbParam').clearValue();
        Ext.getCmp('txtTramiteBuscar').setValue(null);
    },

    onButtonClick: function(button, e, eOpts) {
        var tramiteNum =  Ext.getCmp('txtTramiteBuscar').getValue();
        var parametroNum = Ext.getCmp('cbParam').getValue();
        var strTramiteReg = Ext.getStore('Registro');
        strTramiteReg.proxy.extraParams = {
            busqueda: 1,//Parametro para elegir el tipo de busqueda
            tramite: tramiteNum,
            parametro: parametroNum
        };
        strTramiteReg.load();
    },

    onGrdTramiteCellDblClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
        if (record)
        {
            var winNuevoTramite = Ext.create('Tramites.view.winNuevoTramite');
            winNuevoTramite.curRec = record;
            winNuevoTramite.store = Ext.getStore('Registro');
            Ext.getStore('Registro').load();
            winNuevoTramite.show();
        }
        else
        {
            Ext.Msg.alert('Error', 'Seleccione un registro para editar');
        }
    },

    onGrdTramiteRender: function(component, eOpts) {
        this.onButtonClickRefresh();
    }

});
