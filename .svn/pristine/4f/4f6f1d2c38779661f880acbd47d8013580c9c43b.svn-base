/*
 * File: app/view/administracion/RolesUsuarioViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tramites.view.administracion.RolesUsuarioViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.administracion.rolesusuario',

    onCbUsuarioBuscarKeyup: function(textfield, e, eOpts) {
        var txtUsuario = Ext.getCmp('cbUsuarioBuscar').getValue();
        //console.log(e.isSpecialKey());
        if(txtUsuario !== null && e.isSpecialKey() === false){//8 = Backspace
            var strUsuario = Ext.getCmp('cbUsuarioBuscar').getStore();
            strUsuario.removeAll();
            Ext.Ajax.request({
                method: 'post',
                url: '../servidor/tramites/usuario/getUsuarioBusqueda',
                params: {
                    usuario: txtUsuario
                },
                success: function (response, options) {
                    strUsuario.load();
                    Ext.getCmp('cbUsuarioBuscar').expand();
                }
            });
        }
    },

    onBtnLimpiarUsuarioClick: function(button, e, eOpts) {
        Ext.getCmp('grdUsuarioRol').getStore().removeAll();
        var strUsuario = Ext.getStore('Usuario');
        strUsuario.load();
        Ext.getCmp('grdRol').getStore().removeAll();
    },

    onGrdUsuarioRolRender: function(component, eOpts) {
        this.onBtnLimpiarUsuarioClick();
    },

    onGrdUsuarioRolItemClick: function(dataview, record, item, index, e, eOpts) {

        var g = Ext.getCmp('grdUsuarioRol');
        var rec = g.selection;
        var txtusuario = rec.data.USR_USUARIO;
        var strRoles = Ext.getCmp('grdRol').getStore();
        strRoles.removeAll();
        strRoles.proxy.extraParams = {
            usuario: txtusuario
        };
        strRoles.load();
    },

    onBtnAgregarRolClick: function(button, e, eOpts) {
        var grid = Ext.getCmp('grdRol');
        var store = grid.getStore();
        var strRol = Ext.getCmp('cbRoles').getStore();
        var g = Ext.getCmp('grdUsuarioRol');
        var rec = g.selection;
        var usuariot = rec.data.USR_USUARIO;
        strRol.proxy.extraParams = {
            usuario: usuariot
        };
        store.insert(0,
        {
            USR_USUARIO: usuariot,
            ROL_ID: 0
        });
        strRol.load();
    },

    onBtnQuitarRolClick: function(button, e, eOpts) {
        var store = Ext.getCmp('grdRol').getStore();
        var grid = Ext.getCmp('grdRol');
        var rec = grid.selection;
        var g = Ext.getCmp('grdUsuarioRol');
        var reco = g.selection;
        store.remove(rec);
        store.sync(
        {
            params:{
                usuario: reco.data.USR_USUARIO,
                rol: rec.data.ROL_ID
            },
            success: function(batch, success)
            {
                store.commitChanges();
                store.load();
                Ext.getCmp('grdRol').getStore().load();
            },

            failure: function(batch, success)
            {
                Ext.Msg.alert('Error', 'Hubor un error');
            }
        });
    },

    onRowEditingEdit: function(editor, context, eOpts) {
        var me = this;
        if (context.record.modified)
        {
            var store = Ext.getCmp('grdRol').getStore();
            var rec = Ext.create('model.rolusuariomodel');
            var reco = context.record;
            store.add(reco);
            store.sync(
            {
                params:{
                    usuario: reco.data.USR_USUARIO
                },
                success: function(batch, success)
                {
                    store.commitChanges();
                    store.load();
                    Ext.getCmp('grdRol').getStore().load();
                },

                failure: function(batch, success)
                {
                    Ext.Msg.alert('Error', 'Hubor un error');
                }
            });

        }
        me.onGrdUsuarioRolItemClick();
    },

    onGrdRolCellDblClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
        if(record.data.ROL_ID === 0)
        Ext.getCmp('cbRoles').setDisabled(false);
        else
        Ext.getCmp('cbRoles').setDisabled(true);
    }

});
