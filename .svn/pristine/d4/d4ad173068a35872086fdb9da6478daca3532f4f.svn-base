/*
 * File: app/view/administracion/AsuntosParametrosViewController1.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tramites.view.administracion.AsuntosParametrosViewController1', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.administracion.asuntosparametros',

    onBtnRefreshAxPClick: function(button, e, eOpts) {
        Ext.getCmp('grdAsuntosAsig').getStore().removeAll();
        var strAsunto = Ext.getCmp('grdAsuntosAsig').getStore();
        strAsunto.proxy.extraParams = {
            parametro : Ext.getCmp('cbParametroPrincipal').getValue()
        };
        strAsunto.load();

        Ext.getCmp('grdAsuntosNoAsig').getStore().removeAll();
        var strAsunto1 = Ext.getCmp('grdAsuntosNoAsig').getStore();
        strAsunto1.proxy.extraParams = {
            parametro : Ext.getCmp('cbParametroPrincipal').getValue(),
            falta:1
        };
        strAsunto1.load();
    },

    onBtnAsignarClick: function(button, e, eOpts) {
        var me = this;
        var grid = Ext.getCmp('grdAsuntosNoAsig');
        var NoAsignadoarrayKeys = grid.getSelectionModel().selected.items;

        if(NoAsignadoarrayKeys.length === 0)
        Ext.Msg.alert('Error', 'Debe escoger un Asunto para asignar');

        else
        {
            var store = Ext.getStore('AsuntoParametro');
            store.add(Ext.getCmp('cbParametroPrincipal').getValue());
            store.sync(
            {
                params:{
                    asunto: NoAsignadoarrayKeys[0].data.ASU_CODIGO,
                    parametro : Ext.getCmp('cbParametroPrincipal').getValue()
                },
                success: function(batch, success)
                {
                    store.commitChanges();
                    store.load();
                },

                failure: function(batch, success)
                {
                    Ext.Msg.alert('Error', 'Hubor un error');
                }
            });
            me.onBtnRefreshAxPClick();
        }
    },

    onBtnQuitarAsignacionClick: function(button, e, eOpts) {
        var me = this;
        var grid = Ext.getCmp('grdAsuntosAsig');
        var AsignadoarrayKeys = grid.getSelectionModel().selected.items;
        if(AsignadoarrayKeys.length === 0)
        Ext.Msg.alert('Error', 'Debe escoger un Asunto a remover');
        else
        {
            var rec = grid.selection;
            Ext.Ajax.request
            (
            {
                method: 'post',
                url: '../servidor/tramites/asuntoparametro/delete',
                params: {
                    asunto: AsignadoarrayKeys[0].data.ASU_CODIGO,
                    parametro: Ext.getCmp('cbParametroPrincipal').getValue()
                },
                success: function (response, options) {

                },
                failure: function (response, options){
                    Ext.Msg.alert('Error', 'Hubor un error');
                }
            }
            );
            me.onBtnRefreshAxPClick();
        }
    },

    onGrdAsuntosAsigRender: function(component, eOpts) {
        var nuevoAsunto = Ext.create('Tramites.store.Asunto');
        Ext.getCmp('grdAsuntosAsig').setStore(nuevoAsunto);
        this.onBtnRefreshAxPClick();
    }

});
