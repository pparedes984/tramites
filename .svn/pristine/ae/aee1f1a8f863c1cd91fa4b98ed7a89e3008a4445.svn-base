/*
 * File: app/view/panel/pnlNuevoViewController4.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tramites.view.panel.pnlNuevoViewController4', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.panel.pnldireccionar',

    onArbolUnidadItemClick: function(dataview, record, item, index, e, eOpts) {
        if (BANDERA ===0){
            Ext.getCmp('pnlDireccionarCentral').removeAll();//destruye lo que hay en la pantalla
            // crea la pantalla DirecGeneral y la añade al panel
            var win = Ext.create('Tramites.view.direccionar.DirecGeneral');
            this.getView().down('#pnlDireccionarCentral').add(win);
            //se establecen las propiedades iniciales para unos componentes en las pantallas de direccionamiento y de unidades de dir
            Ext.getCmp('pnlDestinosDireccionar').setVisible(false);
            Ext.getCmp('txtAsignadoA').setHidden(true);
            Ext.getCmp('txtAsignadoADestino').setDisabled(true);
            //se limpia la información que haya en el grid de tramites
            Ext.getCmp('grdTramite2').getStore().removeAll();
            //se declara una variable global del store de Registro de tramites,
            // ya que la información de ese store cambia dependiendo de lo que se escoja en el menú de direcciones
            STRTRAMITEDETA = Ext.getStore('Registro');
            //se declara una variable global que se NECESITA para pasar de una pantalla a otra
            UNIDADDIR = record.data.id;
            //se declara una variable global que recoge el valor del parametro
            PARAMETROPRINCIPAL = Ext.getCmp('cbParametroPrincipal').getValue();
            if(record.data.id === '183')//pantalla de direccionamiento general, el codigo de la unidad 183 pertenece a 'DIRECCIONAMIENTO'
            {
                //establece las propiedades de ciertos componentes para la pantalla de direccionamiento general
                Ext.getCmp('recibidoCheck').setDisabled(false);
                Ext.getCmp('cbEstado').setDisabled(true);
                Ext.getCmp('txtDescripcionDestino').setHidden(true);
                Ext.getCmp('txtDescripDestino').setDisabled(true);
                Ext.getCmp('btnAgregarDestino').setVisible(true);
                Ext.getCmp('btnVerDestinos').setVisible(false);
                Ext.getCmp('txtDestino').setHidden(false);
                Ext.getCmp('txtAsignadoADestino').setDisabled(true);

                win.show();
                //carga la grid con la información correspondiente de tramites para la pantalla de direccionamiento general
                STRTRAMITEDETA.proxy.extraParams = {
                    busqueda: 2,
                    parametro: PARAMETROPRINCIPAL
                };
                STRTRAMITEDETA.load();

            }
            else if(record.data.id !== '183')//pantallas de unidades de direccionamiento
            {
                //establece las propiedades de ciertos componentes para las pantallas de unidades de direccionamiento
                Ext.getCmp('recibidoCheck').setHidden(true);
                Ext.getCmp('recibidoCheck').setDisabled(true);
                Ext.getCmp('cbEstado').setDisabled(false);
                Ext.getCmp('btnAgregarDestino').setVisible(false);
                Ext.getCmp('txtDescripcionDestino').setHidden(false);
                Ext.getCmp('txtDescripDestino').setDisabled(false);
                Ext.getCmp('txtObservacionDestino').setDisabled(true);
                Ext.getCmp('txtObservacion').setHidden(true);
                Ext.getCmp('btnVerDestinos').setVisible(true);
                Ext.getCmp('txtDestino').setHidden(true);
                Ext.getCmp('txtAsignadoADestino').setDisabled(false);
                //Ext.getCmp('cbEstado').setEditable(true);
                win.show();
                //carga la grid con la información de tramites correspondiente a las pantalla de unidades de direccionamiento
                STRTRAMITEDETA.proxy.extraParams = {
                    busqueda: 3,
                    unidad: UNIDADDIR,
                    parametro: PARAMETROPRINCIPAL
                };
                STRTRAMITEDETA.load();
            }
        }
        else
        Ext.Msg.alert('Alerta', 'Se ecuentra en medio del direccionamiento');
    },

    onArbolUnidadAfterRender: function(component, eOpts) {
        //carga el menu correspondiente dependiendo del parametro escogido
        Ext.getCmp('ArbolUnidad').getStore().removeAll();
        var strArbolDireccion = Ext.getCmp('ArbolUnidad').getStore();
        var parametroid = Ext.getCmp('cbParametroPrincipal').getValue();
        if(parametroid!==''){
            strArbolDireccion.proxy.extraParams = {
                parametro: parametroid
            };
            strArbolDireccion.load();
        }
    }

});
