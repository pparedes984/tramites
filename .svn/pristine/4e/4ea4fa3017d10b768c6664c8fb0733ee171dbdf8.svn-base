/*
 * File: app/view/adminGeneral/UnidadDireccionamientoViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tramites.view.adminGeneral.UnidadDireccionamientoViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.admingeneral.unidaddireccionamiento',

    onCbParametroUnidadDirExpand: function(field, eOpts) {
        var strCbUnidadDir = Ext.getCmp('cbParametroUnidadDir').getStore();
        strCbUnidadDir.proxy.extraParams={
            param:2//obtiene todos los parametros
        };
        strCbUnidadDir.load();
    },

    onCbParametroUnidadDirSelect: function(combo, record, eOpts) {
        Ext.getCmp('pnlUnidadesDir').setHidden(false);
        Ext.getCmp('grdUnidadesDir').getStore().removeAll();
        var strUsuario1 = Ext.getCmp('grdUnidadesDir').getStore();
        strUsuario1.proxy.extraParams = {
            parametro : Ext.getCmp('cbParametroUnidadDir').getValue(),
        };
        strUsuario1.load();
    },

    onRowEditingEdit: function(editor, context, eOpts) {
        var me = this;
        if (context.record.modified)
        {
            var store = Ext.getCmp('grdUnidadesDir').getStore();
            var reco = context.record;
            store.add(reco);
            store.sync(
            {
                success: function(batch, success)
                {
                    store.commitChanges();
                    store.load();
                },

                failure: function(batch, success)
                {
                    Ext.Msg.alert('Error', 'Hubor un error');
                }
            });
        }
    },

    onRowEditingCanceledit: function(editor, context, eOpts) {

    }

});
